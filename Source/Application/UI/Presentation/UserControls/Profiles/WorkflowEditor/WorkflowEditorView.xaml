<UserControl x:Class="pdfforge.PDFCreator.UI.Presentation.UserControls.Profiles.WorkflowEditor.WorkflowEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converter="clr-namespace:pdfforge.PDFCreator.UI.Presentation.Converter"
             xmlns:designTime="clr-namespace:pdfforge.PDFCreator.UI.Presentation.DesignTime"
             xmlns:help="clr-namespace:pdfforge.PDFCreator.UI.Presentation.Help"
             xmlns:actionHelper="clr-namespace:pdfforge.PDFCreator.UI.Presentation.Helper.ActionHelper"
             xmlns:workflowEditor="clr-namespace:pdfforge.PDFCreator.UI.Presentation.UserControls.Profiles.WorkflowEditor"
             xmlns:dd="urn:gong-wpf-dragdrop"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             KeyboardNavigation.TabNavigation="None"
             Loaded="WorkflowEditorView_OnLoaded"
             help:HelpProvider.HelpTopic="ProfileSettings"
             d:DataContext="{d:DesignInstance designTime:DesignTimeWorkflowEditorViewModel, IsDesignTimeCreatable=true}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="../../../Styles/Redesign5/Buttons/IconButton.xaml" />
                <ResourceDictionary  Source="../../../Styles/Redesign5/Buttons/SquaredIconButton.xaml" />
                <ResourceDictionary  Source="../../../Styles/Redesign5/ColorDictionary.xaml" />
                <ResourceDictionary  Source="../../../Styles/Redesign5/HoverBorder.xaml" />
                <ResourceDictionary  Source="../../../Styles/Redesign5/Labels.xaml" />
                <ResourceDictionary  Source="../../../Styles/Redesign5/Icons/TopDownArrow.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converter:BoolToVisibilityConverter x:Key="HiddenWhenFalseConverter" TrueValue="Visible" FalseValue="Hidden" />
            <converter:BoolToVisibilityConverter x:Key="CollapsedWhenFalseConverter" TrueValue="Visible" FalseValue="Collapsed" />
            <workflowEditor:HiddenWhenFacadeIsFixedOrderConverter x:Key="HiddenWhenFacadeIsFixedOrderConverter" />

            <Style x:Key="CustomListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <DockPanel>
                                <ContentPresenter />
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="CustomListBoxDataTemplate"  DataType="actionHelper:IPresenterActionFacade">
                <Grid dd:DragDrop.IsDragSource="{Binding }"
                      Height="{StaticResource SquaredButtonSize}"
                      Margin="0 0 0 10"
                      Background="Transparent">
                    <!-- Transparent background for MouseOver Detection-->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Warning -->
                    <Button Grid.Column="0"
                            Foreground="{StaticResource WarningBrush}"
                            Command="{Binding DataContext.EditActionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            CommandParameter="{Binding }"
                            Style="{StaticResource IconButton}"
                            Visibility="{Binding ActionViewModel.HasWarning, Converter={StaticResource HiddenWhenFalseConverter}}"
                            ToolTip="{Binding ActionViewModel.StatusText}">
                        <iconPacks:PackIconMaterialDesign Kind="Notifications" Height="12" />
                    </Button>

                    <!-- Action Title + Status -->
                    <Border Grid.Column="1" Margin="5 0 0 0"
                            Style="{StaticResource HoverBorder}"
                            ToolTip="{Binding ActionViewModel.StatusText}">
                        <DockPanel Margin="10 0 10 0">
                            <TextBlock VerticalAlignment="Center"
                                       Text="{Binding ActionViewModel.Title, StringFormat={}{0}:}"
                                       Padding="0"
                                       Foreground="{StaticResource LightLabelForegroundBrush}"
                                       FontWeight="DemiBold" />
                            <TextBlock Margin="5 0 0 0" VerticalAlignment="Center"
                                       Text="{Binding ActionViewModel.StatusText, Mode=OneWay}"
                                       TextTrimming="CharacterEllipsis" />
                        </DockPanel>
                    </Border>

                    <!-- Edit -->
                    <Button Grid.Column="2"
                            Margin="10 0 0 0"
                            Command="{Binding DataContext.EditActionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            CommandParameter="{Binding }"
                            Style="{StaticResource SquaredIconButton}">
                        <iconPacks:PackIconMaterialDesign Kind="Build" />
                    </Button>

                    <!-- Remove -->
                    <Button Grid.Column="3"
                            Margin="10 0 0 0"
                            Command="{Binding DataContext.RemoveActionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            CommandParameter="{Binding}"
                            Style="{StaticResource SquaredIconButton}">
                        <iconPacks:PackIconMaterialDesign Kind="Delete" />
                    </Button>

                    <!-- Move -->
                    <Button Grid.Column="4"
                            Margin="10 0 0 0"
                            Style="{StaticResource SquaredIconButton}"
                            Cursor="{x:Static Cursors.ScrollNS}"
                            Visibility="{Binding Converter={StaticResource HiddenWhenFacadeIsFixedOrderConverter}}">
                        <iconPacks:PackIconMaterialDesign Kind="DragHandle" />
                    </Button>
                </Grid>
            </DataTemplate>

            <Style x:Key="CustomListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource CustomListBoxItemStyle}" />
                <Setter Property="ItemTemplate" Value="{StaticResource CustomListBoxDataTemplate}" />
                <Setter Property="dd:DragDrop.IsDragSource" Value="True" />
                <Setter Property="dd:DragDrop.IsDropTarget" Value="True" />
                <Setter Property="dd:DragDrop.UseDefaultDragAdorner" Value="True" />
                <Setter Property="dd:DragDrop.DropTargetAdornerBrush" Value="{StaticResource AccentGrey}" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <!-- 0 Add action Header -->
            <RowDefinition Height="Auto" />
            <!-- 1 Preparation Header -->
            <RowDefinition Height="Auto" />
            <!-- 2 Preparation Actions -->
            <RowDefinition Height="Auto" />
            <!-- 3 Modify Header -->
            <RowDefinition Height="Auto" />
            <!-- 4 Modify Actions -->
            <RowDefinition Height="Auto" />
            <!-- 5 Send Header -->
            <RowDefinition Height="Auto" />
            <!-- 6 Send Actions -->
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Action Header + Add Action -->
        <!-- The margin of t:2 is to align the "Add action" button with the ones in the Printer and Accounts views. -->
        <!-- The margin of b:2 inside the labels is to align them back with the "Save" label. -->
        <DockPanel Grid.Row="0" Margin="0 2 0 0"
                   VerticalAlignment="Center">
            <Label DockPanel.Dock="Left" Margin="0 0 0 2"
                   Content="{Binding Translation.Actions}"
                   Style="{StaticResource LargeLabel}" />
            <StackPanel DockPanel.Dock="Right"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Label Content="{Binding Translation.AddAction}"
                       Style="{StaticResource LightLabel}"
                       Margin="0 0 0 2" />
                <Button Margin="10 0 0 0"
                        Command="{Binding OpenAddActionOverviewCommand}"
                        Style="{StaticResource SquaredIconButton}"
                        ToolTip="{Binding Translation.AddActionHint}">
                    <iconPacks:PackIconMaterialDesign Kind="PlaylistAdd" />
                </Button>
            </StackPanel>
        </DockPanel>

        <!-- Preparation Header -->
        <Label Grid.Row="1" Margin="0 20 0 0"
               Visibility="{Binding HasPreConversion, Converter={StaticResource CollapsedWhenFalseConverter}}"
               Content="{Binding Translation.Preparation}"
               Style="{StaticResource LightLabel}" />

        <!-- Preparation Actions -->
        <DockPanel Grid.Row="2" Margin="0 10 0 0"
                   Visibility="{Binding HasPreConversion, Converter={StaticResource CollapsedWhenFalseConverter}}">
            <ContentPresenter Content="{StaticResource TopDownArrow}"
                              Margin="0 2 0 5" />
            <ListBox Margin="20 0 0 0"
                     Visibility="{Binding HasPreConversion, Converter={StaticResource CollapsedWhenFalseConverter}}"
                     dd:DragDrop.DropHandler="{Binding PreparationDropTarget}"
                     ItemsSource="{Binding PreparationActions, Mode=TwoWay}"
                     Style="{StaticResource ResourceKey=CustomListBoxStyle}" />
        </DockPanel>

        <!-- Modify Header-->
        <Label Grid.Row="3" Margin="0 20 0 0"
               Content="{Binding Translation.Modify}"
               Style="{StaticResource LightLabel}" />

        <!-- Modify Actions-->
        <DockPanel Grid.Row="4" Margin="0 10 0 0">
            <ContentPresenter Content="{StaticResource TopDownArrow}"
                              Margin="0 2 0 5" />
            <ListBox Margin="20 0 0 0"
                     dd:DragDrop.DragHandler="{Binding ModifyDragSourceHandler}"
                     dd:DragDrop.DropHandler="{Binding ModifyDropTarget}"
                     ItemsSource="{Binding ModifyActions, Mode=TwoWay}"
                     Style="{StaticResource ResourceKey=CustomListBoxStyle}" />
        </DockPanel>

        <!-- Send Header -->
        <Label Grid.Row="5" Margin="0 20 0 0"
               Content="{Binding Translation.Send}"
               Style="{StaticResource LightLabel}" />

        <!-- Send Actions -->
        <DockPanel Grid.Row="6" Margin="0 10 0 0">
            <ContentPresenter Content="{StaticResource TopDownArrow}"
                              Margin="0 2 0 5" />
            <ListBox Margin="20 0 0 0"
                     dd:DragDrop.DropHandler="{Binding SendDropTarget}"
                     ItemsSource="{Binding SendActions, Mode=TwoWay}"
                     Style="{StaticResource ResourceKey=CustomListBoxStyle}" />
        </DockPanel>
    </Grid>
</UserControl>
