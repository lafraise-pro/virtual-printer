<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:pdfforge.PDFCreator.UI.Presentation.Converter"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ColorDictionary.xaml" />
        <ResourceDictionary Source="Icons/ComponentIcons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <converter:ObjectToObjectOrTranslatableConverter x:Key="ObjectToObjectOrTranslatableConverter" />
    <system:Double x:Key="ArrowWidth">15</system:Double>
    <Thickness x:Key="ComboBoxArrowMargin" Right="{StaticResource ArrowWidth}" />

    <!--https://gist.github.com/hansmaad/9187633-->
    <ControlTemplate TargetType="ToggleButton" x:Key="EmptyToggleButton">
        <Grid Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <ControlTemplate TargetType="ToggleButton" x:Key="pdfforgeComboBoxArrow">
        <Grid Width="{StaticResource ArrowWidth}">
            <ContentControl x:Name="DropDownIcon"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            IsHitTestVisible="False">
                <iconPacks:PackIconMaterialDesign Kind="ArrowDropDown" Width="9" IsHitTestVisible="False" />
            </ContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="LayoutTransform" TargetName="DropDownIcon">
                    <Setter.Value>
                        <RotateTransform Angle="180" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BorderlessComboboxItem" TargetType="ComboBoxItem">
        <!-- r=8 is hand measured to add enough width for the total combobox width (biggest drop down item + DropDownArrow) -->
        <!-- Width is set to make the dropdown not outgrow the combobox -->
        <Border Padding="5 5 8 5"
                Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                Name="PART_Background_ComboboxItem"
                Background="Transparent">
            <ContentPresenter Margin="{StaticResource ComboBoxArrowMargin}"
                              Name="ContentPresenter"
                              ToolTip="{Binding ElementName=ContentPresenter, Path=Content, Converter={StaticResource ObjectToObjectOrTranslatableConverter}}">
                <ContentPresenter.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    </Style>
                </ContentPresenter.Resources>
            </ContentPresenter>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Background_ComboboxItem" Property="Background" Value="{StaticResource ComboBoxMouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="PART_Background_ComboboxItem" Property="Background" Value="{StaticResource ComboBoxSelectedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BorderlessComboboxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Template" Value="{StaticResource BorderlessComboboxItem}" />
    </Style>

    <Style x:Key="BorderlessCombobox"  TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="33" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="TextElement.Foreground" Value="{StaticResource DefaultTextColorBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource BorderlessComboboxItemStyle}" />
        <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border CornerRadius="2"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="Stretch">

                            <ToggleButton BorderThickness="0"
                                          Background="Transparent"
                                          ClickMode="Press"
                                          Template="{StaticResource EmptyToggleButton}"
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          ToolTip="{TemplateBinding SelectedItem, Converter={StaticResource ObjectToObjectOrTranslatableConverter}}" />
                            <!-- Add invisible ItemsPresenter in Grid to get set width of biggest item -->
                            <ItemsPresenter Opacity="0" Margin="0 0 0 0" IsHitTestVisible="False" />

                            <DockPanel LastChildFill="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="Stretch">
                                <ToggleButton DockPanel.Dock="Right"
                                              IsHitTestVisible="False"
                                              Focusable="False"
                                              Template="{StaticResource pdfforgeComboBoxArrow}"
                                              IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                <ContentPresenter DockPanel.Dock="Left"
                                                  Margin="0 0 3 0"
                                                  x:Name="ContentSite" IsHitTestVisible="False"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </DockPanel>

                            <Popup Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True"
                                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                   PopupAnimation="Slide">
                                <ScrollViewer Background="{StaticResource ComboBoxPopUpBackgroundBrush}"
                                              SnapsToDevicePixels="True"
                                              MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                                    HorizontalAlignment="Left" />
                                </ScrollViewer>
                            </Popup>

                            <!-- Disabled Layer -->
                            <Border Background="White" Opacity="0.4" CornerRadius="2">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DisabledEmptyComboboxStyle" TargetType="ComboBox" BasedOn="{StaticResource BorderlessCombobox}">
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Value="0"
                         Binding="{Binding RelativeSource={RelativeSource Self}, Path=ItemsSource.Count}">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
