<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="CustomButton.Foreground.Color">White</Color>
    <Color x:Key="CustomButton.Foreground.MouseEnter.Color">#333333</Color>
    <Color x:Key="CustomButton.Background.Color">#333333</Color>
    <Color x:Key="CustomButton.Background.MouseEnter.Color">White</Color>
    <Color x:Key="CustomButton.Background.Pressed.Color">#F6F6F6</Color>
    <Color x:Key="CustomButton.Foreground.Pressed.Color">#333333</Color>

    <SolidColorBrush x:Key="CustomButton.Foreground.Brush" Color="{DynamicResource CustomButton.Foreground.Color}" />
    <Thickness x:Key="CustomButton.Padding" >5</Thickness>
    <SolidColorBrush x:Key="CustomButton.Background.MouseOver.Brush" Color="White" />
    <SolidColorBrush x:Key="CustomButton.Background.IsPressed.Brush" Color="#FFF6F6F6" />
    <Thickness x:Key="CustomButton.Border.Thickness" >1</Thickness>

    <Style x:Key="WhiteForegroundColoredButton" BasedOn="{StaticResource SquareButtonStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />

        <Setter Property="BorderThickness" Value="1" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFF6F6F6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GreenButton" BasedOn="{StaticResource WhiteForegroundColoredButton}" TargetType="{x:Type ButtonBase}">
        <Style.Resources>
            <Color x:Key="ForegroundColor">White</Color>
            <Color x:Key="BackgroundColor">#5DB35C</Color>
            <Color x:Key="InvertedForegroundColor">#5DB35C</Color>
            <Color x:Key="InvertedBackgroundColor">White</Color>
            <Color x:Key="PressedForegroundColor">#5DB35C</Color>
            <Color x:Key="PressedBackgroundColor">#F6F6F6</Color>
        </Style.Resources>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BackgroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BackgroundColor}" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                        From="{StaticResource BackgroundColor}"
                                        To="{StaticResource InvertedBackgroundColor}"
                                        Duration="0:0:0.15" />
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                        From="{StaticResource ForegroundColor}"
                                        To="{StaticResource InvertedForegroundColor}"
                                        Duration="0:0:0.15" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                        From="{StaticResource InvertedBackgroundColor}"
                                        To="{StaticResource BackgroundColor}"
                                        Duration="0:0:0.1" />
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                        From="{StaticResource InvertedForegroundColor}"
                                        To="{StaticResource ForegroundColor}"
                                        Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PressedForegroundColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PressedBackgroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LargeGreenButton" BasedOn="{StaticResource GreenButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="MinWidth" Value="125" />
    </Style>

    <Style x:Key="GreyButton" BasedOn="{StaticResource WhiteForegroundColoredButton}" TargetType="{x:Type ButtonBase}">
        <Style.Resources>
            <Color x:Key="ForegroundColor">White</Color>
            <Color x:Key="BackgroundColor">#333333</Color>
            <Color x:Key="InvertedForegroundColor">#333333</Color>
            <Color x:Key="InvertedBackgroundColor">White</Color>
            <Color x:Key="PressedForegroundColor">#333333</Color>
            <Color x:Key="PressedBackgroundColor">#F6F6F6</Color>
        </Style.Resources>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BackgroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BackgroundColor}" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                        From="{StaticResource BackgroundColor}"
                                        To="{StaticResource InvertedBackgroundColor}"
                                        Duration="0:0:0.15" />
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                        From="{StaticResource ForegroundColor}"
                                        To="{StaticResource InvertedForegroundColor}"
                                        Duration="0:0:0.15" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                        From="{StaticResource InvertedBackgroundColor}"
                                        To="{StaticResource BackgroundColor}"
                                        Duration="0:0:0.1" />
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                        From="{StaticResource InvertedForegroundColor}"
                                        To="{StaticResource ForegroundColor}"
                                        Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PressedForegroundColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PressedBackgroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LargeGreyButton" BasedOn="{StaticResource GreyButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="MinWidth" Value="125" />
    </Style>

    <Style x:Key="RedButton" BasedOn="{StaticResource WhiteForegroundColoredButton}" TargetType="{x:Type ButtonBase}">
        <Style.Resources>
            <Color x:Key="ForegroundColor">White</Color>
            <Color x:Key="BackgroundColor">#DA2025</Color>
            <Color x:Key="InvertedForegroundColor">#DA2025</Color>
            <Color x:Key="InvertedBackgroundColor">White</Color>
            <Color x:Key="PressedForegroundColor">#DA2025</Color>
            <Color x:Key="PressedBackgroundColor">#F6F6F6</Color>
        </Style.Resources>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BackgroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BackgroundColor}" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                        From="{StaticResource BackgroundColor}"
                                        To="{StaticResource InvertedBackgroundColor}"
                                        Duration="0:0:0.15" />
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                        From="{StaticResource ForegroundColor}"
                                        To="{StaticResource InvertedForegroundColor}"
                                        Duration="0:0:0.15" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                        From="{StaticResource InvertedBackgroundColor}"
                                        To="{StaticResource BackgroundColor}"
                                        Duration="0:0:0.1" />
                        <ColorAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                        Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                        From="{StaticResource InvertedForegroundColor}"
                                        To="{StaticResource ForegroundColor}"
                                        Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PressedForegroundColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PressedBackgroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LargeRedButton" BasedOn="{StaticResource RedButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="MinWidth" Value="125" />
    </Style>

    <Style x:Key="PdfCreatorButton" BasedOn="{StaticResource WhiteForegroundColoredButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LightGreyButton" BasedOn="{StaticResource WhiteForegroundColoredButton}" TargetType="ButtonBase">
        <Setter Property="BorderBrush" Value="#F5F5F5" />
        <Setter Property="Background" Value="#F5F5F5" />
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlatGreyButton" BasedOn="{StaticResource GreyButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="15" />
    </Style>

    <Style x:Key="FlatPdfCreatorButton" BasedOn="{StaticResource RedButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="15" />
    </Style>

    <Style x:Key="FlatGreenButton" BasedOn="{StaticResource GreenButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="15" />
    </Style>

    <Style x:Key="FlatRedButton" BasedOn="{StaticResource RedButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="15" />
    </Style>
</ResourceDictionary>
