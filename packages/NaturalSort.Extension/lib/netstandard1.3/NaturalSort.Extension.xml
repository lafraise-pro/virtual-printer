<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NaturalSort.Extension</name>
    </assembly>
    <members>
        <member name="T:NaturalSort.Extension.NaturalSortComparer">
            <summary>
            Creates a string comparer with natural sorting functionality
            which allows it to sort numbers inside the strings as numbers, not as letters.
            (e.g. "1", "2", "10" instead of "1", "10", "2").
            It uses either a <seealso cref="T:System.StringComparison" /> (preferred) or arbitrary
            <see cref="T:System.Collections.Generic.IComparer`1" /> string comparer for the comparisons.
            </summary>
        </member>
        <member name="F:NaturalSort.Extension.NaturalSortComparer._stringComparison">
            <summary>
            String comparison used for comparing strings.
            Used if <see cref="F:NaturalSort.Extension.NaturalSortComparer._stringComparer" /> is null.
            </summary>
        </member>
        <member name="F:NaturalSort.Extension.NaturalSortComparer._stringComparer">
            <summary>
            String comparer used for comparing strings.
            </summary>
        </member>
        <member name="M:NaturalSort.Extension.NaturalSortComparer.#ctor(System.StringComparison)">
            <summary>
            Constructs comparer with a <seealso cref="T:System.StringComparison" /> as the inner mechanism.
            Prefer this to <see cref="M:NaturalSort.Extension.NaturalSortComparer.#ctor(System.Collections.Generic.IComparer{System.String})" /> if possible.
            </summary>
            <param name="stringComparison">String comparison to use</param>
        </member>
        <member name="M:NaturalSort.Extension.NaturalSortComparer.#ctor(System.Collections.Generic.IComparer{System.String})">
            <summary>
            Constructs comparer with a <seealso cref="T:System.Collections.Generic.IComparer`1" /> string comparer as the inner mechanism.
            Prefer <see cref="M:NaturalSort.Extension.NaturalSortComparer.#ctor(System.StringComparison)" /> if possible.
            </summary>
            <param name="stringComparer">String comparer to wrap</param>
        </member>
        <member name="M:NaturalSort.Extension.NaturalSortComparer.Compare(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:NaturalSort.Extension.NaturalSortExtension">
            <summary>
            Extension for <see cref="T:System.StringComparer" /> that adds support for natural sorting.
            </summary>
        </member>
        <member name="M:NaturalSort.Extension.NaturalSortExtension.WithNaturalSort(System.Collections.Generic.IComparer{System.String})">
            <summary>
            Enhances string comparer with natural sorting functionality
            which allows it to sort numbers inside the strings as numbers, not as letters.
            (e.g. "1", "2", "10" instead of "1", "10", "2").
            Note that using string comparison directly should perform better, consider <seealso cref="M:NaturalSort.Extension.NaturalSortExtension.WithNaturalSort(System.StringComparison)" />.
            </summary>
            <param name="stringComparer">Used string comparer</param>
            <returns>Returns comparer of strings that considers natural sorting.</returns>
        </member>
        <member name="M:NaturalSort.Extension.NaturalSortExtension.WithNaturalSort(System.StringComparison)">
            <summary>
            Uses given string comparison to create a comparer with natural sorting functionality
            which allows it to sort numbers inside the strings as numbers, not as letters.
            (e.g. "1", "2", "10" instead of "1", "10", "2").
            Using string comparison directly should perform better than <seealso cref="M:NaturalSort.Extension.NaturalSortExtension.WithNaturalSort(System.Collections.Generic.IComparer{System.String})" />.
            </summary>
            <param name="stringComparison">Used string comparison</param>
            <returns>Returns comparer of strings that considers natural sorting.</returns>
        </member>
    </members>
</doc>
